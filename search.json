[{"title":"R语言常用函数（持续更新中）","url":"/2023/07/13/R语言常用函数/","content":"\nR语言中，我常使用的函数，“增、删、改、查、合、导及其它”。\n\n<!-- more -->\n\n# 增、删、改、查、合、导及其它\n\n## 增\n\n### 创建数据\n\n### 导入数据\n\n### 添加数据\n\n## 删\n\n### 指定某行后列\n\n### 匹配删除数据\n\n## 改\n\n### 长变宽\n\n### 宽变长\n\n### 字符串\n\n字符串的切割、截取、拼接和替换\nstrsplit, unlist, length, substring, substr, paste(sep/collapse), gsub\n\n```R\n\n```\n\n### 排序\n\nsample, seq, rep, sort, order\n\n```R\n> rm(list=ls()) #清除环境变量\n> set.seed(199) #设置随机数种子\n> sample(10) #随机取数字\n [1]  3  2 10  7  9  8  1  5  4  6\n> seq(1,10) #产生数字，可设置步长\n [1]  1  2  3  4  5  6  7  8  9 10\n> sample(seq(1,10), 3)  #从1到10中随机取三个数字\n[1]  1  7 10\n> data <- sample(seq(1,100), 10)    #从1到100中随机取10个数字，并保存到data变量中\n> data\n [1]  6 91 60 72 89 20 47 44 71 13\n > class(data)  #查看data类型\n[1] \"integer\"\n> str(data) #查看data类型\n int [1:10] 6 91 60 72 89 20 47 44 71 13\n> sort(data)    #\n [1]  6 13 20 44 47 60 71 72 89 91\n> sort(data, decreasing = T)\n [1] 91 89 72 71 60 47 44 20 13  6\n> order(data)\n [1]  1 10  6  8  7  3  9  4  5  2\n> data[order(data)]\n [1]  6 13 20 44 47 60 71 72 89 91\n```\n\n## 查\n\n### 查看数据类型/结构\n\nclass，str，dim，summary，nrow，ncol，rownames，colnames，head，tail\n\n```R\nrm(list = ls())\n> mydata <- data.frame(number=seq(11,20),\n+                      salary=rep(seq(1,5),2),\n+                      location=sample(c(\"A\",\"B\",\"C\"),10, replace=T))\n> mydata\n   number salary location\n1      11      1        C\n2      12      2        C\n3      13      3        A\n4      14      4        C\n5      15      5        A\n6      16      1        C\n7      17      2        C\n8      18      3        B\n9      19      4        A\n10     20      5        B\n> class(mydata)\n[1] \"data.frame\"\n> str(mydata)\n'data.frame':\t10 obs. of  3 variables:\n $ number  : int  11 12 13 14 15 16 17 18 19 20\n $ salary  : int  1 2 3 4 5 1 2 3 4 5\n $ location: chr  \"C\" \"C\" \"A\" \"C\" ...\n> dim(mydata)\n[1] 10  3\n> summary(mydata)\n     number          salary    location        \n Min.   :11.00   Min.   :1   Length:10         \n 1st Qu.:13.25   1st Qu.:2   Class :character  \n Median :15.50   Median :3   Mode  :character  \n Mean   :15.50   Mean   :3                     \n 3rd Qu.:17.75   3rd Qu.:4                     \n Max.   :20.00   Max.   :5\n> nrow(mydata)\n[1] 10\n> ncol(mydata)\n[1] 3\n> rownames(mydata)\n [1] \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\"\n> colnames(mydata)\n[1] \"number\"   \"salary\"   \"location\"\n> head(mydata)\n  number salary location\n1     11      1        C\n2     12      2        C\n3     13      3        A\n4     14      4        C\n5     15      5        A\n6     16      1        C\n> tail(mydata)\n   number salary location\n5      15      5        A\n6      16      1        C\n7      17      2        C\n8      18      3        B\n9      19      4        A\n10     20      5        B\n```\n\n### 取数据\n\n[x,y], 行名和列名, subset\n\n```R\n> head(CO2)\n  Plant   Type  Treatment conc uptake\n1   Qn1 Quebec nonchilled   95   16.0\n2   Qn1 Quebec nonchilled  175   30.4\n3   Qn1 Quebec nonchilled  250   34.8\n4   Qn1 Quebec nonchilled  350   37.2\n5   Qn1 Quebec nonchilled  500   35.3\n6   Qn1 Quebec nonchilled  675   39.2\n> CO2[1,]   #第一列\n  Plant   Type  Treatment conc uptake\n1   Qn1 Quebec nonchilled   95     16\n> CO2[,1]   #第一行\n [1] Qn1 Qn1 Qn1 Qn1 Qn1 Qn1 Qn1 Qn2 Qn2 Qn2 Qn2 Qn2 Qn2 Qn2 Qn3 Qn3 Qn3 Qn3 Qn3 Qn3 Qn3 Qc1 Qc1 Qc1 Qc1 Qc1 Qc1\n[28] Qc1 Qc2 Qc2 Qc2 Qc2 Qc2 Qc2 Qc2 Qc3 Qc3 Qc3 Qc3 Qc3 Qc3 Qc3 Mn1 Mn1 Mn1 Mn1 Mn1 Mn1 Mn1 Mn2 Mn2 Mn2 Mn2 Mn2\n[55] Mn2 Mn2 Mn3 Mn3 Mn3 Mn3 Mn3 Mn3 Mn3 Mc1 Mc1 Mc1 Mc1 Mc1 Mc1 Mc1 Mc2 Mc2 Mc2 Mc2 Mc2 Mc2 Mc2 Mc3 Mc3 Mc3 Mc3\n[82] Mc3 Mc3 Mc3\nLevels: Qn1 < Qn2 < Qn3 < Qc1 < Qc3 < Qc2 < Mn3 < Mn2 < Mn1 < Mc2 < Mc3 < Mc1\n> CO2[1:3,]\n  Plant   Type  Treatment conc uptake\n1   Qn1 Quebec nonchilled   95   16.0\n2   Qn1 Quebec nonchilled  175   30.4\n3   Qn1 Quebec nonchilled  250   34.8\n> CO2[,2:3]\n          Type  Treatment\n1       Quebec nonchilled\n2       Quebec nonchilled\n3       Quebec nonchilled\n4       Quebec nonchilled\n5       Quebec nonchilled\n......\n> CO2[1:5,1:4]\n  Plant   Type  Treatment conc\n1   Qn1 Quebec nonchilled   95\n2   Qn1 Quebec nonchilled  175\n3   Qn1 Quebec nonchilled  250\n4   Qn1 Quebec nonchilled  350\n5   Qn1 Quebec nonchilled  500\n\n##根据行名、列名截取数据\n> CO2[seq(1,20,2),]\n   Plant   Type  Treatment conc uptake\n1    Qn1 Quebec nonchilled   95   16.0\n3    Qn1 Quebec nonchilled  250   34.8\n5    Qn1 Quebec nonchilled  500   35.3\n7    Qn1 Quebec nonchilled 1000   39.7\n9    Qn2 Quebec nonchilled  175   27.3\n11   Qn2 Quebec nonchilled  350   41.8\n13   Qn2 Quebec nonchilled  675   41.4\n15   Qn3 Quebec nonchilled   95   16.2\n17   Qn3 Quebec nonchilled  250   40.3\n19   Qn3 Quebec nonchilled  500   42.9\n> CO2[,c(\"Plant\",\"uptake\")]\n   Plant uptake\n1    Qn1   16.0\n2    Qn1   30.4\n3    Qn1   34.8\n4    Qn1   37.2\n5    Qn1   35.3\n> CO2[seq(1,20,2),c(\"Plant\",\"uptake\")]\n   Plant uptake\n1    Qn1   16.0\n3    Qn1   34.8\n5    Qn1   35.3\n7    Qn1   39.7\n9    Qn2   27.3\n11   Qn2   41.8\n13   Qn2   41.4\n15   Qn3   16.2\n17   Qn3   40.3\n19   Qn3   42.9\n\n##subset\n> subset(CO2, CO2$Type==\"Quebec\", select = c(\"Type\",\"Plant\",\"uptake\"))\n     Type Plant uptake\n1  Quebec   Qn1   16.0\n2  Quebec   Qn1   30.4\n3  Quebec   Qn1   34.8\n4  Quebec   Qn1   37.2\n5  Quebec   Qn1   35.3\n6  Quebec   Qn1   39.2\n7  Quebec   Qn1   39.7\n8  Quebec   Qn2   13.6\n9  Quebec   Qn2   27.3\n10 Quebec   Qn2   37.1\n11 Quebec   Qn2   41.8\n12 Quebec   Qn2   40.6\n\n```\n\n### 查找匹配行/列\n\n%in%, grep, grepl, interest\n\n```R\n> head(CO2) #R自带数据\n  Plant   Type  Treatment conc uptake\n1   Qn1 Quebec nonchilled   95   16.0\n2   Qn1 Quebec nonchilled  175   30.4\n3   Qn1 Quebec nonchilled  250   34.8\n4   Qn1 Quebec nonchilled  350   37.2\n5   Qn1 Quebec nonchilled  500   35.3\n6   Qn1 Quebec nonchilled  675   39.2\n> plant_species <- c(\"Qn1\",\"Qn3\",\"Qn4\")\n> plant_species %in% CO2$Plant[0:3]\n[1]  TRUE FALSE FALSE\n> grep(\"Qn1\", CO2$Plant)\n[1] 1 2 3 4 5 6 7\n> grepl(\"Qn1\", CO2$Plant)\n [1]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[19] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[37] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[55] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[73] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n> CO2[grep(\"Qn1\",CO2$Plant),]\n  Plant   Type  Treatment conc uptake\n1   Qn1 Quebec nonchilled   95   16.0\n2   Qn1 Quebec nonchilled  175   30.4\n3   Qn1 Quebec nonchilled  250   34.8\n4   Qn1 Quebec nonchilled  350   37.2\n5   Qn1 Quebec nonchilled  500   35.3\n6   Qn1 Quebec nonchilled  675   39.2\n7   Qn1 Quebec nonchilled 1000   39.7\n> CO2[grepl(\"Qn1\",CO2$Plant),]\n  Plant   Type  Treatment conc uptake\n1   Qn1 Quebec nonchilled   95   16.0\n2   Qn1 Quebec nonchilled  175   30.4\n3   Qn1 Quebec nonchilled  250   34.8\n4   Qn1 Quebec nonchilled  350   37.2\n5   Qn1 Quebec nonchilled  500   35.3\n6   Qn1 Quebec nonchilled  675   39.2\n7   Qn1 Quebec nonchilled 1000   39.7\n> intersect(plant_species, CO2$Plant)\n[1] \"Qn1\" \"Qn3\"\n> intersect(plant_species, CO2$Plant[0:3])\n[1] \"Qn1\"\n```\n\n## 合\n\ncbind, rbind, merge\n\n```R\n> head(cbindA)\n                            id   SAMD11    NOC2L   KLHL17\n1 TCGA-AC-A3OD-01B-06R-A22O-07 7.234873 10.74941 8.489675\n2 TCGA-AR-A251-01A-12R-A169-07 7.790335 12.30692 9.080771\n3 TCGA-BH-A0B5-11A-23R-A12P-07 7.004001 11.95045 8.042766\n4 TCGA-E2-A1IK-01A-11R-A144-07 7.176634 12.27498 8.748516\n5 TCGA-E2-A15C-01A-31R-A12D-07 9.627965 12.16211 8.791762\n6 TCGA-B6-A2IU-01A-32R-A18M-07 7.332757 12.15743 9.090721\n> head(cbindB)\n                            id  PLEKHN1    PERM1     HES4\n1 TCGA-AC-A3OD-01B-06R-A22O-07 8.043983 7.645314 6.654734\n2 TCGA-AR-A251-01A-12R-A169-07 8.805406 7.891789 8.424512\n3 TCGA-BH-A0B5-11A-23R-A12P-07 6.505176 6.505176 7.589666\n4 TCGA-E2-A1IK-01A-11R-A144-07 8.213874 7.764995 8.244910\n5 TCGA-E2-A15C-01A-31R-A12D-07 9.088827 8.465383 8.061344\n6 TCGA-B6-A2IU-01A-32R-A18M-07 8.612551 8.104540 9.085393\n> dim(cbindA)\n[1] 10  4\n> dim(cbindB)\n[1] 10  4\n> head(cbind2)\n                            id   SAMD11    NOC2L   KLHL17                           id  PLEKHN1    PERM1     HES4\n1 TCGA-AC-A3OD-01B-06R-A22O-07 7.234873 10.74941 8.489675 TCGA-AC-A3OD-01B-06R-A22O-07 8.043983 7.645314 6.654734\n2 TCGA-AR-A251-01A-12R-A169-07 7.790335 12.30692 9.080771 TCGA-AR-A251-01A-12R-A169-07 8.805406 7.891789 8.424512\n3 TCGA-BH-A0B5-11A-23R-A12P-07 7.004001 11.95045 8.042766 TCGA-BH-A0B5-11A-23R-A12P-07 6.505176 6.505176 7.589666\n4 TCGA-E2-A1IK-01A-11R-A144-07 7.176634 12.27498 8.748516 TCGA-E2-A1IK-01A-11R-A144-07 8.213874 7.764995 8.244910\n5 TCGA-E2-A15C-01A-31R-A12D-07 9.627965 12.16211 8.791762 TCGA-E2-A15C-01A-31R-A12D-07 9.088827 8.465383 8.061344\n6 TCGA-B6-A2IU-01A-32R-A18M-07 7.332757 12.15743 9.090721 TCGA-B6-A2IU-01A-32R-A18M-07 8.612551 8.104540 9.085393\n> cbind2[,-5]   #去除第5列\n                             id   SAMD11    NOC2L   KLHL17  PLEKHN1    PERM1     HES4\n1  TCGA-AC-A3OD-01B-06R-A22O-07 7.234873 10.74941 8.489675 8.043983 7.645314 6.654734\n2  TCGA-AR-A251-01A-12R-A169-07 7.790335 12.30692 9.080771 8.805406 7.891789 8.424512\n3  TCGA-BH-A0B5-11A-23R-A12P-07 7.004001 11.95045 8.042766 6.505176 6.505176 7.589666\n4  TCGA-E2-A1IK-01A-11R-A144-07 7.176634 12.27498 8.748516 8.213874 7.764995 8.244910\n5  TCGA-E2-A15C-01A-31R-A12D-07 9.627965 12.16211 8.791762 9.088827 8.465383 8.061344\n6  TCGA-B6-A2IU-01A-32R-A18M-07 7.332757 12.15743 9.090721 8.612551 8.104540 9.085393\n7  TCGA-AR-A1AS-01A-11R-A12P-07 9.119358 12.43026 8.880949 8.677321 8.095418 8.537656\n8  TCGA-BH-A0BD-01A-11R-A034-07 7.042327 12.27446 8.435348 8.552010 7.581820 8.266001\n9  TCGA-BH-A209-11A-42R-A157-07 7.365634 11.15970 7.722990 7.413656 7.021075 7.466931\n10 TCGA-AQ-A04J-01A-02R-A034-07 7.362098 12.84906 8.370815 7.909787 7.465998 7.959912\n\n##merge\n> merge_data <- merge(cbindA, cbindB, by=\"id\") \n> head(merge_data)\n                            id   SAMD11    NOC2L   KLHL17  PLEKHN1    PERM1     HES4\n1 TCGA-AC-A3OD-01B-06R-A22O-07 7.234873 10.74941 8.489675 8.043983 7.645314 6.654734\n2 TCGA-AQ-A04J-01A-02R-A034-07 7.362098 12.84906 8.370815 7.909787 7.465998 7.959912\n3 TCGA-AR-A1AS-01A-11R-A12P-07 9.119358 12.43026 8.880949 8.677321 8.095418 8.537656\n4 TCGA-AR-A251-01A-12R-A169-07 7.790335 12.30692 9.080771 8.805406 7.891789 8.424512\n5 TCGA-B6-A2IU-01A-32R-A18M-07 7.332757 12.15743 9.090721 8.612551 8.104540 9.085393\n6 TCGA-BH-A0B5-11A-23R-A12P-07 7.004001 11.95045 8.042766 6.505176 6.505176 7.589666\n\n```\n\n### 指定数据合并\n\n## 导\n\n### 导出数据\n\n### 导出图片\n\n## 其它\n","tags":["函数"],"categories":["R"]},{"title":"三剑客在生信中的应用(持续更新中)","url":"/2023/04/18/三剑客在生信中的应用/","content":"\n最靓三剑客：sed，grep和awk\n<!-- more -->\n# 1. 简介\n ## sed、grep和awk是什么？\n- **sed**（stream editor）是一个流编辑器，它用于处理文本流，按顺序逐行读取文件，支持基本的文本转换操作，例如查找、替换、删除等。但一般用的较多的是**替换**功能。\n\n- **grep** {global search regular expression(RE) and print out the line} 是一个强大的文本**搜索**工具，用于在文本文件中查找指定的字符串，并输出匹配的行。\n\n- **awk** 是一个文本处理工具，它能够对文本文件进行处理和分析，十分强大，支持各种文本处理操作，例如查找、替换、计算等。它也更像一门编程语言，它可以自定义变量，有条件语句，有循环，有数组，有正则，有函数等。它读取文件的方式是一行一行的读，根据你给出的条件进行查找，并在找出来的行中进行操作。实际应用中也很多变。\n\n ## 作用和用途\n- 在组学数据分析中，sed、grep和awk都是非常常用的工具，用于处理各种生物信息学数据，例如FASTA、SAM、VCF等。通过使用这些工具，我们可以快速、高效地处理大量数据，提取有用的信息，并用于进一步的分析和研究。当然，针对不同格式的文件，现在也有一些非常好用的专属工具比如seqkit,bioawk等，在面对一些基础或者个性化的时候，基本的工具还是离不开。\n\n# 2. 基础知识\n   ## sed \n   - sed 核心：替换，逐行读取\n   - sed 基本模式为： sed [选项] ‘[pattern/command]’ 文件名\n   选项参数：\n   -n sed会将修改的内容都输出到屏幕上。不加此参数，即默认情况下，会将修改的和未修改的参数都输出到屏幕上。\n   -e 允许对输入数据应用多条sed命令进行编辑\n   -f 读入脚本文件，从sed脚本中读入sed命令\n   -r 支持正则表达式\n   -i 直接修改文件内容，且不输到屏幕上\n   ![fig_sed-1](fig_sed-1.png)\n   ![fig_sed-2](fig_sed-2.png)\n   ![fig_sed-3](fig_sed-3.png)\n\n\n\n\n   ## grep\n\n   ## awk\n\n   ## 正则表达式基础\n   \n\n# 3. 在生物信息学中的应用\n   ## 处理FASTA文件\n   ## 搜索和过滤BLAST结果\n   ## 处理SAM/BAM文件\n   ## 其他应用\n\n# 4. 案例研究\n   ## 使用grep搜索基因组中的特定序列\n   ## 使用awk提取FASTA文件中的序列名称和长度\n   ## 使用sed修改FASTQ文件中的序列质量值\n   ## 使用grep和awk处理BLAST结果文件\n   ## 使用awk处理VCF文件\n   ## 其他案例\n\n# 5. 最佳实践和提示\n   ## 正确使用正则表达式\n   ## 处理大型数据文件时的注意事项\n   ## 其他实践和提示\n\n# 6. 其他相关工具和资源\n   ## 命令行工具、脚本语言和软件包\n   ## 常用的生物信息学资源和数据库\n\n","tags":["工具-三剑客"],"categories":["linux"]},{"title":"部署我的第一个hexo博客","url":"/2023/04/05/我的第一个hexo博客/","content":"这可能是最详细的避坑hexo部署教程！\n<!-- more -->\nHexo 是一种静态网站生成器，它有以下优点和缺点.\n优点：\n1. **快速搭建**：Hexo 的使用非常简单，只需要几个命令就可以搭建一个静态网站，不需要任何数据库或服务器端的支持。\n2. **高度可定制化**：Hexo 提供了大量的主题和插件，用户可以通过灵活配置实现自己想要的网站风格，也可以进行深度定制。\n3. **易于维护**：由于 Hexo 是纯静态网站，不需要后台服务器的支持，因此维护比较简单，也易于部署到各种环境中。\n4. **增强SEO效果**：Hexo 生成的网页文件极其简洁，便于搜索引擎抓取，同时也支持 sitemap 和 robots.txt 等 SEO 工具。\n\n缺点：\n1. **学习门槛较高**：Hexo 是基于命令行操作的，对于初学者来说，学习成本可能较高。\n2. **功能受限**：由于 Hexo 是静态网站生成器，它的功能相对较为受限，无法实现一些动态交互和后端处理等操作。\n3. **不适合大型网站**：在大流量的情况下，静态网站会面临性能瓶颈，需要使用额外的服务器技术进行支持。适用于小型博客或个人网站。\n\n基于以上的考量，我使用hexo搭建了我个人的第一个博客，下面是具体的操作流程，供大家参考。\n\n\n## hexo本地搭建\n1. **安装下载[Node.js](https://nodejs.org/en)**\n选择适合自己的版本，我这里用的macos的LTS（长期支持版本），也推荐使用长期支持版本。下载安装完成后，检测安装是否成功。\n```bash\nnode -v\nv18.15.0 #安装的版本号\n```\n2. **安装hexo**\n利用npm下载安装hexo\n```bash\nnpm install -g hexo-cli #下载、全局安装hexo，如果网速不佳，可使用cnpm\nhexo -v #检测安装的hexo版本号\nmkdir blog #创建自己的blog目录\ncd blog\nsudo hexo init #hexo 初始化\nhexo s #创建一个本地端口网页，供调试、预览\n```\n\n\n## 部署到github\n目前我们搭建的个人博客已经在本地搭建完成，当然也仅限于本地或者局域网查看和预览。如何实现让其他人也能方便的看到你分享的内容呢，实现的方法有很多，这里我们将其部署到github方式实现。具体的，\n1. **创建一个仓库**\n\n安装git插件\n```\nnpm install --save hexo-deployer-git\n```\n![创建新的仓库](01-创建新的仓库.png)\n\n **命名和github用户名一致**。这里由于我已经有了一个一样的名字，系统提示。\n\n![新建仓库命名](02-%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93%E5%91%BD%E5%90%8D.png)\n\n这里我们将用到下面的网址。\n![仓库网址](03-%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93%E7%BD%91%E5%9D%80.png)\n\n2. 配置_config.yml文件\n\n```bash\nvim _config.yml\n```\n根据自己的网址填写相应的内容\n![配置文件](04-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6_git.png)\n\n3. 部署到github\n\n```bash\nhexo clean\nhexo g\nhexo d #这里需要输入github用户名和key（用户密码现在已经失效，key可以生成，注意保管）\n```\n\n部署成功后，仓库会显示如下内容\n\n![部署成功后仓库更新](05-%E9%83%A8%E7%BD%B2%E6%88%90%E5%8A%9F%E5%90%8E%E4%BB%93%E5%BA%93%E5%B1%95%E7%A4%BA%E7%9A%84%E5%86%85%E5%AE%B9.png)\n\n此时，通过[个人网址](https://huiz0916.github.io/)进行访问和浏览。\n\n\n## 切换主题\nhexo 官网有很多的主题选择，这里我是用的是[Yilia](https://github.com/litten/hexo-theme-yilia.git)\n```bash\ngit clone https://github.com/litten/hexo-theme-yilia.git themes\nvim ../_config.yml #修改配置文件，将主题修改为yilia\nhexo clean \nhexo g \nhexo s\nhexo d\n```\n\n\n## 日常更新一篇博客内容的流程\n```\nhexo new “部署我的第一个博客” #创建新的博客内容\nvim source/_posts/部署我的第一个博客.md #对博客内容进行编辑，支持markdown。也可以使用其他软件编辑该内容。\nhexo clean \nhexo g \nhexo s\nhexo d\n```\n\n\n## 参考文献\n\n1. https://www.youtube.com/watch?v=erKYtw4Rfhk&ab_channel=CodeSheep程序羊\n2. https://hexo.io/zh-cn/docs/\n","tags":["工具-hexo"],"categories":["hexo"]},{"title":"Hello World","url":"/2023/04/05/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n<!-- more -->\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n"}]